-- models/watch_assembly_attributes.sql

WITH category_positions AS (
    -- Mapping category to specific attribute columns (column_no)
    SELECT 
        master_cat,
        slave_cat,
        column_no
    FROM {{ ref('temp_assembly_cats') }}
),

watch_attributes AS (
    -- Actual attribute records for each watch assembly
    SELECT 
        a.assembly,
        a.category_code,
        a.attr_code
    FROM {{ ref('sku_attr_assembly') }} a
),

joined_data AS (
    -- Join attributes to their column positions
    SELECT
        wa.assembly,
        cp.master_cat,
        wa.category_code,
        wa.attr_code,
        cp.column_no
    FROM watch_attributes wa
    LEFT JOIN category_positions cp
        ON wa.category_code = cp.slave_cat
    WHERE cp.column_no <= 10  -- Adjust as needed for more columns
),

-- Pivot attributes into atr_cat_01 to atr_cat_10
pivoted_data AS (
    SELECT
        assembly,
        master_cat,

        MAX(CASE WHEN column_no = 1 THEN attr_code END) AS atr_cat_01,
        MAX(CASE WHEN column_no = 2 THEN attr_code END) AS atr_cat_02,
        MAX(CASE WHEN column_no = 3 THEN attr_code END) AS atr_cat_03,
        MAX(CASE WHEN column_no = 4 THEN attr_code END) AS atr_cat_04,
        MAX(CASE WHEN column_no = 5 THEN attr_code END) AS atr_cat_05,
        MAX(CASE WHEN column_no = 6 THEN attr_code END) AS atr_cat_06,
        MAX(CASE WHEN column_no = 7 THEN attr_code END) AS atr_cat_07,
        MAX(CASE WHEN column_no = 8 THEN attr_code END) AS atr_cat_08,
        MAX(CASE WHEN column_no = 9 THEN attr_code END) AS atr_cat_09,
        MAX(CASE WHEN column_no = 10 THEN attr_code END) AS atr_cat_10

    FROM joined_data
    GROUP BY assembly, master_cat
)

SELECT *
FROM pivoted_data
