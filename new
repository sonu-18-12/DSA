WITH category_positions AS (
    SELECT 
        master_cat,
        slave_cat,
        column_no
    FROM {{ ref('temp_assembly_cats') }}
    WHERE column_no BETWEEN 1 AND 150
),

watch_attributes AS (
    SELECT 
        a.assembly,
        a.category_code,
        a.attr_code,
        COALESCE(a.end_of_range_attr, 0) AS end_attr
    FROM {{ ref('sku_attr_assembly') }} a
),

joined_data AS (
    SELECT
        wa.assembly,
        cp.master_cat,
        wa.category_code,
        wa.attr_code,
        wa.end_attr,
        cp.column_no
    FROM watch_attributes wa
    LEFT JOIN category_positions cp
        ON wa.category_code = cp.slave_cat
    WHERE cp.column_no BETWEEN 1 AND 150
),

-- Rank all master_cat values per assembly and retain the highest one
master_cat_rank AS (
    SELECT 
        assembly,
        master_cat,
        ROW_NUMBER() OVER (PARTITION BY assembly ORDER BY master_cat DESC) AS rn
    FROM joined_data
    WHERE master_cat IS NOT NULL
),

top_master_cat AS (
    SELECT assembly, master_cat
    FROM master_cat_rank
    WHERE rn = 1
),

-- Keep only rows belonging to selected master_cat per assembly
filtered_data AS (
    SELECT jd.*
    FROM joined_data jd
    INNER JOIN top_master_cat tmc
        ON jd.assembly = tmc.assembly
       AND jd.master_cat = tmc.master_cat
),

pivoted_data AS (
    SELECT
        assembly,
        master_cat
        {% for i in range(1, 151) %}
            , MAX(CASE WHEN column_no = {{ i }} THEN attr_code END) AS atr_cat_{{ '%03d' % i }}
            , MAX(CASE WHEN column_no = {{ i }} THEN end_attr END) AS end_atr_cat_{{ '%03d' % i }}
        {% endfor %}
    FROM filtered_data
    GROUP BY assembly, master_cat
)

SELECT *
FROM pivoted_data
