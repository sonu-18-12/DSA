WITH product_category AS (
    -- Get the category code for 'product'
    SELECT category_code
    FROM {{ ref('category') }}
    WHERE category_desc = 'product'
),

category_positions AS (
    -- Map slave categories to their master category and column position
    SELECT master_cat, slave_cat, column_no
    FROM {{ ref('temp_assembly_cats') }}
    WHERE column_no BETWEEN 1 AND 150
),

watch_attributes AS (
    -- Get all attribute data from sku_attr_assembly
    SELECT 
        a.assembly,
        a.category_code,
        a.attr_code,
        COALESCE(a.end_of_range_attr, 0) AS end_attr,
        CASE 
            WHEN a.category_code = pc.category_code THEN TRUE
            ELSE FALSE
        END AS is_product_category
    FROM {{ ref('sku_attr_assembly') }} a
    LEFT JOIN product_category pc
        ON a.category_code = pc.category_code
),

-- Filter to only non-product categories
filtered_attributes AS (
    SELECT *
    FROM watch_attributes
    WHERE is_product_category = FALSE
),

joined_data AS (
    -- Join attributes with their positions in the layout
    SELECT
        wa.assembly,
        cp.master_cat,
        cp.column_no,
        wa.attr_code,
        wa.end_attr
    FROM filtered_attributes wa
    JOIN category_positions cp
        ON wa.category_code = cp.slave_cat
),

ranked_master AS (
    -- Rank to get one master_cat per assembly
    SELECT *,
           ROW_NUMBER() OVER (PARTITION BY assembly ORDER BY master_cat DESC) AS rn
    FROM joined_data
),

filtered_data AS (
    -- Keep only top-ranked master_cat per assembly
    SELECT *
    FROM ranked_master
    WHERE rn = 1
),

pivoted_data AS (
    -- Pivot the attribute and end_attr values into columns
    SELECT
        assembly,
        master_cat
        {% for i in range(1, 151) %}
            , MAX(CASE WHEN column_no = {{ i }} THEN attr_code END) AS atr_cat_{{ '%03d' % i }}
            , MAX(CASE WHEN column_no = {{ i }} THEN end_attr END) AS end_atr_cat_{{ '%03d' % i }}
        {% endfor %}
    FROM filtered_data
    GROUP BY assembly, master_cat
)

-- Final output
SELECT *
FROM pivoted_data
