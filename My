WITH category_positions AS (
    SELECT 
        master_cat,
        slave_cat,
        column_no
    FROM {{ ref('temp_assembly_cats') }}
    WHERE column_no BETWEEN 1 AND 150
),

assembly_attributes AS (
    SELECT 
        a.assembly,
        a.category_code,
        a.attr_code,
        COALESCE(a.end_of_range_attr, 0) AS end_attr
    FROM {{ ref('sku_attr_assembly') }} a
),

joined_data AS (
    SELECT
        aa.assembly,
        cp.master_cat,
        cp.column_no,
        aa.attr_code,
        aa.end_attr,
        ROW_NUMBER() OVER (PARTITION BY aa.assembly ORDER BY cp.master_cat) AS master_cat_rank
    FROM assembly_attributes aa
    JOIN category_positions cp
        ON aa.category_code = cp.slave_cat
),

-- Keep only one master_cat per assembly (lowest master_cat)
filtered_master_cat AS (
    SELECT *
    FROM joined_data
    WHERE master_cat_rank = 1
),

-- Pivot attribute values into columns
pivoted_data AS (
    SELECT
        assembly,
        master_cat
        {% for i in range(1, 151) %}
            , MAX(CASE WHEN column_no = {{ i }} THEN attr_code END) AS atr_cat_{{ '%03d' % i }}
            , MAX(CASE WHEN column_no = {{ i }} THEN end_attr END) AS end_atr_cat_{{ '%03d' % i }}
        {% endfor %}
    FROM filtered_master_cat
    GROUP BY assembly, master_cat
)

SELECT *
FROM pivoted_data
